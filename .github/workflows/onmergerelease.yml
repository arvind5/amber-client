name: OnMergeRelease

on:
  push:
    branches:
      - 'main'
      - 'release/*'
    tags:
      - '**'

jobs:
  build-test-scan:
    runs-on: [ self-hosted ]
    env:
      http_proxy: ${{ secrets.HTTP_PROXY }}
      https_proxy: ${{ secrets.HTTPS_PROXY }}
      no_proxy: ${{ secrets.NO_PROXY }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.4'


      - name: Style Checker
        run: |
          gofmt -l .
          if [[ $(gofmt -l . | wc -l) -gt 0 ]]; then
             echo "Atleast 1 file need formatting"
             exit 1
          fi

      - name: Snyk Scan
        run: |
          snyk config set endpoint=${{ secrets.SNYK_URL }}
          snyk config set api=${{ secrets.SYNK_API_TOKEN }}
          snyk config set org=${{ secrets.ORG_NAME }}
          snyk auth ${{ secrets.SNYK_AUTH_TOKEN }}
          snyk test --insecure --all-projects --json-file-output=snyc-scan.json

      - name: Unit Test Coverage
        run: |
          COVERAGE=$(cd tdx-cli && make test-coverage | grep 'total' | awk '{print $3}' | awk -F. '{print $1}')
          echo "Unit test coverage for tdx-cli is - $COVERAGE%"
          if [[ $COVERAGE -lt 80 ]]; then
            echo "Unit test coverage must be above 80%"
            exit 1
          fi
          COVERAGE=$(cd go-connector && go test ./... -coverprofile=cover.out | awk '{print $5}' | awk -F. '{print $1}')
          echo "Unit test coverage for go-connector is - $COVERAGE%"
          if [[ $COVERAGE -lt 80 ]]; then
            echo "Unit test coverage must be above 80%"
            exit 1
          fi
          COVERAGE=$(cd go-tdx && go test ./... --tags=test -coverprofile=cover.out | awk '{print $5}' | awk -F. '{print $1}')
          echo "Unit test coverage for go-tdx is - $COVERAGE%"
          if [[ $COVERAGE -lt 80 ]]; then
            echo "Unit test coverage must be above 80%"
            exit 1
          fi
